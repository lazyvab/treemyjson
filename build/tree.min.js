function viewTree(a,b){function c(){s.hide(300),setTimeout(function(){s.remove()},300)}function d(){r.empty()}function e(a){var b=$(a);b.trigger("expand"),b.children("ul").length?b.attr("data-expanded",!0):b.removeAttr("data-expanded")}function f(a){var b=$(a);b.trigger("collapse"),b.attr("data-expanded",!1)}function g(a,b){if(b){var c=o(b);if(c&&c.length){a.attr("data-expanded",!1);for(var d=$("<ul></ul>").appendTo(a),e=0;e<c.length;e++){var h=c[e],i=p(b,h);if("function"!=typeof i){var j=$('<li class="node"><span class="icon"></span><span class="key">'+h+"</span></li>").appendTo(d);if(j.data("context",i),null===i||"object"!=typeof i)j.append('<span class="value">'+i+"</span>");else{if(j.on("expand",function(){var a=$(this);a.data("traversed")||(g(a,a.data("context")),a.data("traversed",!0))}),i){var k=o(i);if(k&&k.length&&f(j),"function"==typeof q){var l=i&&q(i);l&&l.length&&j.append('<span class="props"></span>')}}m(j)}}}}}}function h(a,b){if(b){var c=q(b);if(c&&c.length){a.attr("data-expanded",!1);for(var d=$("<ul></ul>").appendTo(a),e=0;e<c.length;e++){var g=c[e],i=b[g];if("function"!=typeof i){var j=$('<li class="node"><span class="icon"></span><span class="key">'+g+"</span></li>").appendTo(d);if(j.data("context",i),null===i||"object"!=typeof i)j.append('<span class="value">'+i+"</span>");else{if(j.on("expand",function(){var a=$(this);a.data("traversed")||(h(a,a.data("context")),a.data("traversed",!0))}),i){var k=q(i);k&&k.length&&f(j)}m(j)}i&&0!==g.indexOf("_")||j.addClass("extra")}}}}}function i(a){t.empty(),$(".properties-parent").text(a.find(".key").text()),h(t,a.data("context")),s.addClass("properties-mode")}function j(a,b,c,d){if(b){var e=o(b);if(d="function"==typeof d&&d||function(){return!0},e&&e.length)for(var h=0;h<e.length;h++){var i=e[h],k=c?c+"."+i:i,l=p(b,i);if(d(i,l)){var n=$('<li class="node"><span class="icon"></span><span class="key">'+k+"</span></li>").appendTo(a);if(n.data("context",l),n.on("expand",function(){var a=$(this);a.data("traversed")||(g(a,a.data("context")),a.data("traversed",!0))}),l){var q=o(l);q&&q.length&&f(n)}m(n)}else j(a,l,k,d)}}}function k(b){if(d(),b){var c=$("<ul></ul>").appendTo(r);j(c,a,"",function(a){return a&&-1!==a.toLowerCase().indexOf(b.toLowerCase())})}else g(r,a)}function l(){$(document).on("keyup",function(a){return 27===a.keyCode?(c(),!1):void 0}),s.find(".exit-treeview").on("click",c),s.find(".search").on("keyup",function(a){var b,c=$(this);return 27===a.keyCode&&c.val("").blur(),b=c.val(),k(b),a.stopImmediatePropagation(),!1}),s.find(".exit-props").on("click",function(){s.removeClass("properties-mode")}),s.find(".minimal-checkbox input").on("change",function(a){t.toggleClass("minimal",$(a.currentTarget).is(":checked"))})}function m(a){var b=a&&$(a)||s.find(".node");b.find(".icon").click(function(){var a=$(this).closest(".node"),b=a.attr("data-expanded");"undefined"!=typeof b&&("true"===b?f(a):e(a))}),b.find(".key").click(function(){$(".key.selected").removeClass("selected"),window.ref=$(this).addClass("selected").closest(".node").data("context")}),b.find(".props").click(function(){i(b)})}$("#mytree").remove(),b=b||{};var n=Tree.Templates.Main(),o="function"==typeof b.getNodes?b.getNodes:function(a){return Object.keys(a)},p="function"==typeof b.getValue?b.getValue:function(a,b){return a[b]},q="function"==typeof b.getProperties?b.getProperties:void 0,r=b.el?$(b.el):$(n).appendTo("body").hide().show(500).find(".tree-main"),s=b.el?r:$("#mytree"),t=s.find(".tree-properties");l(),g(r,a)}this.Tree=this.Tree||{},this.Tree.Templates=this.Tree.Templates||{},this.Tree.Templates.Main=Handlebars.template(function(a,b,c,d,e){return this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,a.helpers),e=e||{},'<div id="mytree">\r\n  <button class="exit-treeview" title="Exit">&times;</button>\r\n  <div class="content-wrapper">\r\n    <div class="top-bar">\r\n      <div class="top-main">\r\n        <input type="text" class="search" placeholder="Looking for something specific? Search here..."/>\r\n      </div>\r\n      <div class="top-props">\r\n        <div class="exit-props">&lt;&lt;&nbsp;Go back</div>\r\n        <div class="props-heading">\r\n          <span>Properties of <span class="properties-parent"></span> :</span>\r\n          <label class="minimal-checkbox">\r\n            <input type="checkbox" checked>\r\n            <span>Minimal</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="tree-content">\r\n      <div class="tree-main"></div>\r\n      <div class="tree-properties minimal"></div>\r\n    </div>\r\n  </div>\r\n</div>'});